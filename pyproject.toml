[tool.poetry]
name = "openapi-pydantic"
version = "0.4.0"
description = "Pydantic OpenAPI schema implementation"
authors = ["Mike Oakley <mike-oakley@users.noreply.github.com>"]
readme = "README.md"
repository = "https://github.com/mike-oakley/openapi-pydantic"
license = "MIT"
keywords = [
  "openapi",
  "schema",
  "parser",
  "pydantic",
  "validation",
]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Framework :: Pydantic",
]
include = ["openapi_pydantic/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"
pydantic = ">=1.8"

[tool.poetry.group.test.dependencies]
pytest = "^7.3.0"
pytest-cov = "^4.0.0"
openapi-spec-validator = "^0.7.0"

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
mypy = "^1.8.0"
pre-commit = "^2.16.0"
ruff = "^0.1.9"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
strict = true
disallow_any_generics = false
implicit_reexport = false
show_error_codes = true
files = ["openapi_pydantic/", "tests/"]
plugins = ["pydantic.mypy"]
